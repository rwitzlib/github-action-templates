on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        default: dev
      ecr_repo:
        type: string
        required: true
      dockerfile:
        type: string
        required: true
      context:
        type: string
        required: true
      project_directory:
        type: string
        required: true
      terraform_directory:
        type: string
        required: true
      global_json_file:
        type: string
        required: true
      private_nuget_registry:
        type: string
        default: ''
      timezone:
        type: string
        default: CST

jobs:
  dotnet_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: ${{ inputs.global_json_file }}

      - uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "${{ inputs.timezone }}"
          timezoneWindows: "${{ inputs.timezone }}"

      - name: Add Private NuGet Registry
        if: ${{ inputs.private_nuget_registry != '' }}
        run: |
          dotnet nuget add source ${{ inputs.private_nuget_registry }} \
            --username ${{ secrets.PRIVATE_NUGET_REGISTRY_USER }} --password ${{ secrets.PRIVATE_NUGET_REGISTRY_PASS }} --store-password-in-clear-text

      - name: Build and Test
        working-directory: ${{ inputs.project_directory }}
        run: |
          dotnet restore
          dotnet build
          dotnet test

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            ./TestResults/*

  image_build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          mask-aws-account-id: true
          role-duration-seconds: 900
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
          role-session-name: gha-lad-${{ github.run_id }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ inputs.ecr_repo }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long

      - name: Docker Build
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          build-args: |
            PRIVATE_NUGET_REGISTRY=${{inputs.private_nuget_registry || '' }}
            PRIVATE_NUGET_REGISTRY_USER=${{ secrets.PRIVATE_NUGET_REGISTRY_USER || '' }}
            PRIVATE_NUGET_REGISTRY_PASS=${{ secrets.PRIVATE_NUGET_REGISTRY_PASS || '' }}
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          # load: true
          # outputs: type=docker,dest=/tmp/service.tar

  terraform_validate:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          mask-aws-account-id: true
          role-duration-seconds: 900
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
          role-session-name: gha-lad-${{ github.run_id }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Validate
        working-directory: ${{ inputs.terraform_directory }}
        run: |
          terraform init -upgrade
          terraform validate