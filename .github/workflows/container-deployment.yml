name: .NET Container Deployment

on:
  workflow_call:
    inputs:
      asdf

jobs:
  dotnet_build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.push_image.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
            
      - name: Build and Test
        run: |
          
            docker build -t backtest .
      - id: push_image
        name: Push to ECR
        run: |
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 100008144700.dkr.ecr.us-east-2.amazonaws.com
            echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_OUTPUT
            docker tag backtest 100008144700.dkr.ecr.us-east-2.amazonaws.com/lad-dev-marketviewer-backtest:${{ github.sha }}
            docker push 100008144700.dkr.ecr.us-east-2.amazonaws.com/lad-dev-marketviewer-backtest:${{ github.sha }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            /TestResults/*

  image_build:
    runs-on: ubuntu-latest
    needs:
      - dotnet_build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - id: push_image
        name: Push to ECR
        run: |
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 100008144700.dkr.ecr.us-east-2.amazonaws.com
            echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_OUTPUT
            docker tag backtest 100008144700.dkr.ecr.us-east-2.amazonaws.com/lad-dev-marketviewer-backtest:${{ github.sha }}
            docker push 100008144700.dkr.ecr.us-east-2.amazonaws.com/lad-dev-marketviewer-backtest:${{ github.sha }}

  terraform_validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          
      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Planning
        run: |
          cd tf
          terraform init -upgrade
          terraform validate

  terraform_plan:
    runs-on: ubuntu-latest
    needs: 
      - build
      - terraform_validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Planning
        run: |
          cd tf
          terraform init -upgrade
          terraform validate
          echo "image_tag = \"${{ needs.build.outputs.image_tag }}\"" >> dev.tfvars
          terraform plan -var-file="dev.tfvars" -out ../tfplan
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform_plan
          path: tfplan
        
  deploy:
    runs-on: ubuntu-latest
    needs: 
      - terraform_plan
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: terraform_plan

      - name: Terraform Apply
        run: |
          cd tf
          terraform init -upgrade
          terraform apply ../tfplan
