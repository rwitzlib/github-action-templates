on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        default: dev
      docker:
        type: string
        required: true
      solution_directory:
        type: string
        required: true
      global_json_file:
        type: string
        required: true
      terraform_directory:
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Dotnet Build
        uses: rwitzlib/github-action-templates/.github/actions/dotnet-build@MARK-165-fix-docker-datetime
        with:
          project_directory: ${{ inputs.solution_directory }}
          global_json_file: ${{ inputs.global_json_file }}

  docker:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        cfg: ${{ fromJson(inputs.docker) }}
    steps:
      - name: Docker Build Push
        uses: rwitzlib/github-action-templates/.github/actions/docker-build-push@MARK-165-fix-docker-datetime
        with:
          ecr_repo: ${{ matrix.cfg.ecr_repo }}
          dockerfile: ${{ matrix.cfg.dockerfile }}
          context: ${{ matrix.cfg.context }}
          build-args: ${{ matrix.cfg.build-args }}

  terraform_validate:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          mask-aws-account-id: true
          role-duration-seconds: 900
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
          role-session-name: gha-lad-${{ github.run_id }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Validate
        working-directory: ${{ inputs.terraform_directory }}
        run: |
          terraform init -upgrade
          terraform validate

  terraform_plan:
    runs-on: ubuntu-latest
    needs: 
      - build
      - docker
      - terraform_validate
    concurrency:
      group: ${{ github.repository }}
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          mask-aws-account-id: true
          role-duration-seconds: 900
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
          role-session-name: gha-lad-${{ github.run_id }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Setup Terraform Variables
        run: |
          echo "image_tag = \"${{ github.ref_name }}\"" >> ${{ inputs.environment }}.tfvars

      - name: Terraform Plan
        working-directory: ${{ inputs.terraform_directory }}
        run: |
          terraform init
          terraform validate
          terraform plan -input=false -var-file="../${{ inputs.environment }}.tfvars" -out ../final.tfplan

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform_plan
          path: final.tfplan
        
  terraform_apply:
    if: github.event_name == 'workflow_dispatch' || github.ref_name == 'master'
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs:
      - terraform_plan
    concurrency:
      group: ${{ github.repository }}
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          mask-aws-account-id: true
          role-duration-seconds: 900
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
          role-session-name: gha-lad-${{ github.run_id }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: terraform_plan

      - name: Terraform Apply
        working-directory: ${{ inputs.terraform_directory }}
        run: |
          terraform init
          terraform apply -auto-approve ../final.tfplan
